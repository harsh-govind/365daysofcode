#include <stdio.h>
#include <stdlib.h>
void merge(int a[], int b[], int m, int n)
{
    int i, j, k, c[m + n];
    i = j = k = 0;
    while (i < m && j < n)
    {
        if (a[i] < b[j])
        {
            c[k++] = a[i++];
        }
        else if (b[j] < a[i])
        {
            c[k++] = b[j++];
        }
        else if (a[i] == b[j])
        {
            c[k++] = a[i];
            c[k++] = a[i++];
            j++;
        }
    }
    for (; i < m; i++)
    {
        c[k++] = a[i];
    }
    for (; j < n; j++)
    {
        c[k++] = b[j];
    }
    k = 0;
    for (i = 0; i < m; i++)
    {
        a[i] = c[k++];
    }
    for (j = 0; j < n; j++)
    {
        b[j] = c[k++];
    }
}
int main()
{
    int t;
    scanf("%d", &t);
    while (t--)
    {
        int n, m;
        scanf("%d", &n);
        scanf("%d", &m);
        int *arr1;
        arr1 = (int *)malloc(n * sizeof(int));
        for (int i = 0; i < n; i++)
            scanf("%d", &arr1[i]);
        int *arr2;
        arr2 = (int *)malloc(m * sizeof(int));
        for (int i = 0; i < m; i++)
            scanf("%d", &arr2[i]);

        merge(arr1, arr2, n, m);
        for (int i = 0; i < n; i++)
            printf("%d ", arr1[i]);
        for (int i = 0; i < m; i++)
            printf("%d ", arr2[i]);
        printf("\n");
    }
    return 0;
}
